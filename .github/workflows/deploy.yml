name: Deploy to server

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy to remote host
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check secrets
        run: |
          echo "Checking secrets..."
          host="${{ secrets.SSH_HOST }}"
          user="${{ secrets.SSH_USER }}"
          ssh_key="${{ secrets.SSH_PRIVATE_KEY }}"
          [ -n "$host" ] || (echo "SSH_HOST is not set" && exit 1)
          [ -n "$user" ] || (echo "SSH_USER is not set" && exit 1)
          [ -n "$ssh_key" ] || (echo "SSH_PRIVATE_KEY is not set" && exit 1)
          echo "All required secrets are set."

      - name: Deploy to server over SSH
        run: |
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > deploy_key
          chmod 600 deploy_key
          ssh -o StrictHostKeyChecking=no -i deploy_key -p 22 ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
            set -e
            echo "Deploy started on $(hostname)"
            cd /root/finance_control

            # Get latest code
            git fetch --all --prune
            git reset --hard origin/main

            # Stop and remove old bot container
            docker-compose stop bot || true
            docker-compose rm -f bot || true
            
            # Remove old bot image to avoid conflicts
            docker rmi finance_control_bot || true

            # Build and start bot container (db service is commented out)
            docker-compose build bot
            docker-compose up -d bot

            # Clean up unused images
            docker image prune -f || true

            echo "Deploy finished"
          EOF
          rm deploy_key
